# Generated by Django 4.0.4 on 2022-05-14 11:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('fname', models.CharField(max_length=15, verbose_name='FirstName')),
                ('lname', models.CharField(blank=True, max_length=15, verbose_name='LastName')),
                ('email', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='IsStaff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='IsSuperUser')),
                ('password', models.CharField(max_length=16, verbose_name='Password')),
                ('profile', models.TextField(default='No image', verbose_name='ProfileImage')),
                ('permanent_address', models.TextField(default='no address', verbose_name='address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterFormModel',
            fields=[
                ('fname', models.CharField(max_length=15, verbose_name='FirstName')),
                ('lname', models.CharField(blank=True, max_length=15, verbose_name='LastName')),
                ('email', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='Email')),
                ('dob', models.DateField(verbose_name='DOB')),
                ('password', models.CharField(max_length=16, verbose_name='Password')),
                ('profile', models.TextField(default='No image', verbose_name='ProfileImage')),
            ],
        ),
        migrations.CreateModel(
            name='Sellers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('address', models.TextField()),
                ('shopname', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='viedo_lectures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='No Title', max_length=100)),
                ('video_url', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=30)),
                ('image', models.TextField(default='')),
                ('viedo_lectures', models.ManyToManyField(to='blog.viedo_lectures')),
            ],
        ),
        migrations.CreateModel(
            name='StoreItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('classtype', models.CharField(default='', max_length=50)),
                ('noOfItems', models.IntegerField(default=0)),
                ('image', models.TextField()),
                ('category', models.CharField(max_length=50)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.sellers')),
            ],
        ),
        migrations.CreateModel(
            name='PostLikes',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('NoOfLikes', models.IntegerField(default=0, verbose_name='Likes')),
                ('likedBy', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('dateTime', models.DateTimeField(auto_now_add=True, verbose_name='DateTime')),
                ('image', models.TextField(default='no image', verbose_name='BlogImage')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('postlike', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='blog.postlikes')),
            ],
        ),
        migrations.CreateModel(
            name='OrderedItmes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.CharField(max_length=100)),
                ('totalPrice', models.IntegerField()),
                ('transectionId', models.TextField()),
                ('buyer_email', models.CharField(default='Not Given', max_length=50)),
                ('address', models.TextField(default='No Address Given')),
                ('items', models.ForeignKey(default='Item  not available', on_delete=django.db.models.deletion.SET_DEFAULT, to='blog.storeitems')),
            ],
        ),
        migrations.CreateModel(
            name='FolowersModel',
            fields=[
                ('email', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('followers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FollowdByModel',
            fields=[
                ('email', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('follwedBy', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Classes_and_subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('myclass', models.CharField(max_length=20)),
                ('classtype', models.CharField(default='Not Provided', max_length=30)),
                ('picture', models.ImageField(default='', upload_to='banners/', verbose_name='bannerpic')),
                ('subject', models.ManyToManyField(to='blog.subjects')),
            ],
        ),
    ]
